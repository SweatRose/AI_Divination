name: Docker Image Build

on:
  push:
    branches:
      - main
    tags:
      - "*"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs: 
  get-tags:
    runs-on: ubuntu-20.04
    env:
      TZ: Asia/Shanghai
    outputs:
      tags: ${{ steps.set-output-id.outputs.tags }}
    steps:
      - uses: actions/checkout@v2
      - name: set-output
        id: set-output-id
        run: |
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo ::set-output name=tags::${VERSION}
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
  
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Build Frontend
        run: cd frontend && pnpm install --no-frozen-lockfile && pnpm build && cp -r dist ../dist

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4

  
          with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
